<?xml version="1.0" encoding="UTF-8"?>  
        <beans xmlns="http://www.springframework.org/schema/beans"  
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
        xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd">  
        
    <description>Shiro Configuration</description>

    <!-- shiro session配置 -->
        <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
    <!-- 会话管理器，设定会话超时及保存 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 全局会话超时时间（单位毫秒），默认30分钟 -->
        <property name="globalSessionTimeout" value="1800000" />
        <property name="sessionDAO" ref="sessionDAO"/>
    </bean>
    <!-- 会话验证调度器，每30分钟执行一次验证 -->
    <!-- <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler"> -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
        <property name="interval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
    <!-- sessionDAO保存认证信息 -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
        <property name="cacheManager" ref="cacheManager" />
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>
    <!-- 用户授权信息Cache, 采用EhCache
    <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManager" ref="cacheManager" />
    </bean> --> 


	<!-- <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO"/>
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
	<property name="sessionDAO" ref="sessionDAO"/>
	</bean> -->

	<!-- Shiro's main business-tier object for web-enabled applications -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		
		<property name="realm" ref="myRealm" />
		<!-- <property name="realm" ref="kickoutSessionControlFilter" /> -->
		
		<property name="cacheManager" ref="cacheManager" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>

	<!-- 項目自定义的Realm -->
	<bean id="myRealm" class="com.uestc.realm.MyRealm">
		 <property name="cacheManager" ref="cacheManager" />
	</bean>
	
	<bean id="kickoutSessionControlFilter" class="com.uestc.realm.KickoutSessionControlFilter">  
	
		 <property name="sessionManager" ref="sessionManager" />
		 <property name="cacheManager" ref="cacheManager"/>  
		 <!-- <property name="sessionManager" ref="sessionManager"/>   -->
		 <property name="kickoutAfter" value="false"/>  
		 <property name="maxSession" value="1"/>  
		 <property name="kickoutUrl" value="/login?kickout=1"/>  
    </bean>   

	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		
		<!-- 配置我们的登录请求地址 -->   
		<property name="loginUrl" value="/index.html#" />
		 <!-- 配置我们在登录页登录成功后的跳转地址，如果你访问的是非/login地址，则跳到您访问的地址 -->  
		<property name="successUrl" value="/web-inf/index.html" />
		<!-- 如果您请求的资源不再您的权限范围，则跳转到/403请求地址 -->  
		<property name="unauthorizedUrl" value="/error/es.jsp" />
		<property name="filters">  
            <map>
                <entry key="kickout" value-ref="kickoutSessionControlFilter"/>
            </map> 
        </property>  
        
		 <!-- 权限配置 -->  
		<property name="filterChainDefinitions">
			<value>
			    <!-- anon表示此地址不需要任何权限即可访问 -->  
			    <!-- perms[user:query]表示访问此连接需要权限为user:query的用户 --> 
			    <!-- roles[manager]表示访问此连接需要用户的角色为manager,参数可以写多个，多个时必须加上引号，并且参数之间用逗号分割 -->   
				<!-- /WEB-INF/jsptest/index.jsp = authc,kickout
				/WEB-INF/jsptest/error.jsp = anon,kickout
				/WEB-INF/jsptest/ok.jsp = anon,kickout
				/checkLogin.do = anon
				/getAllRole.action = anon
				/getRoleUser.action = anon -->
				
				/index.html = anon
				/Nurse/index.html = anon
				/Nurse/textbookManage/getTextbookInfo = anon
				/testPhp/adjustCouApply.php = authc
				/textbookManage/getTextbookInfo = anon
				/index.html#/eduAdmin/adjustCouApply = authc
				/index.html#/eduAdmin/textbookMgmt = authc
				/eduAdmin/textbookMgmt = authc
				/login.jsp = anon
				/testJson.action = anon
				/logout1.action = authc,roles[1]
				/logouta3.action =  perms[2]
				<!--所有的请求(除去配置的静态资源请求或请求地址为anon的请求)都要通过登录验证,如果未登录则跳到/login-->    
				/** = anon
			</value>
		</property>
	</bean>

	<!-- 用户授权信息Cache 缓存管理器 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />
     
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- AOP式方法级权限检查 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>

	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	
 </beans>  