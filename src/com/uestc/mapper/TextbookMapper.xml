<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.uestc.mapper.TextbookMapper" >
  <resultMap id="BaseResultMap" type="com.uestc.model.Textbook" >
    <id column="ISBN" property="ISBN" jdbcType="CHAR" />
    <result column="CourseId" property="courseId" jdbcType="CHAR" />
    <result column="TextbookName" property="textbookName" jdbcType="VARCHAR" />
    <result column="Publisher" property="publisher" jdbcType="VARCHAR" />
    <result column="Pubtime" property="pubtime" jdbcType="DATE" />
    <result column="Author" property="author" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ISBN, CourseId, TextbookName, Publisher, Pubtime, Author
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.uestc.model.TextbookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from textbook
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from textbook
    where ISBN = #{ISBN,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from textbook
    where ISBN = #{ISBN,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.uestc.model.TextbookExample" >
    delete from textbook
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.uestc.model.Textbook" >
    insert into textbook (ISBN, CourseId, TextbookName, 
      Publisher, Pubtime, Author
      )
    values (#{ISBN,jdbcType=CHAR}, #{courseId,jdbcType=CHAR}, #{textbookName,jdbcType=VARCHAR}, 
      #{publisher,jdbcType=VARCHAR}, #{pubtime,jdbcType=DATE}, #{author,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.uestc.model.Textbook" >
    insert into textbook
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ISBN != null" >
        ISBN,
      </if>
      <if test="courseId != null" >
        CourseId,
      </if>
      <if test="textbookName != null" >
        TextbookName,
      </if>
      <if test="publisher != null" >
        Publisher,
      </if>
      <if test="pubtime != null" >
        Pubtime,
      </if>
      <if test="author != null" >
        Author,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ISBN != null" >
        #{ISBN,jdbcType=CHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=CHAR},
      </if>
      <if test="textbookName != null" >
        #{textbookName,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null" >
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="pubtime != null" >
        #{pubtime,jdbcType=DATE},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.uestc.model.TextbookExample" resultType="java.lang.Integer" >
    select count(*) from textbook
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update textbook
    <set >
      <if test="record.ISBN != null" >
        ISBN = #{record.ISBN,jdbcType=CHAR},
      </if>
      <if test="record.courseId != null" >
        CourseId = #{record.courseId,jdbcType=CHAR},
      </if>
      <if test="record.textbookName != null" >
        TextbookName = #{record.textbookName,jdbcType=VARCHAR},
      </if>
      <if test="record.publisher != null" >
        Publisher = #{record.publisher,jdbcType=VARCHAR},
      </if>
      <if test="record.pubtime != null" >
        Pubtime = #{record.pubtime,jdbcType=DATE},
      </if>
      <if test="record.author != null" >
        Author = #{record.author,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update textbook
    set ISBN = #{record.ISBN,jdbcType=CHAR},
      CourseId = #{record.courseId,jdbcType=CHAR},
      TextbookName = #{record.textbookName,jdbcType=VARCHAR},
      Publisher = #{record.publisher,jdbcType=VARCHAR},
      Pubtime = #{record.pubtime,jdbcType=DATE},
      Author = #{record.author,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.uestc.model.Textbook" >
    update textbook
    <set >
      <if test="courseId != null" >
        CourseId = #{courseId,jdbcType=CHAR},
      </if>
      <if test="textbookName != null" >
        TextbookName = #{textbookName,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null" >
        Publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="pubtime != null" >
        Pubtime = #{pubtime,jdbcType=DATE},
      </if>
      <if test="author != null" >
        Author = #{author,jdbcType=VARCHAR},
      </if>
    </set>
    where ISBN = #{ISBN,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uestc.model.Textbook" >
    update textbook
    set CourseId = #{courseId,jdbcType=CHAR},
      TextbookName = #{textbookName,jdbcType=VARCHAR},
      Publisher = #{publisher,jdbcType=VARCHAR},
      Pubtime = #{pubtime,jdbcType=DATE},
      Author = #{author,jdbcType=VARCHAR}
    where ISBN = #{ISBN,jdbcType=CHAR}
  </update>
</mapper>